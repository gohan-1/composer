namespace org.fishDepartment.shipping.net


concept Address {
  o String city optional
  o String country
  o String street optional
  o String postCode
}



concept PreviousState {
  o String location
  o DateTime arrivalDate
}

concept CurrentState {
  o String location
  o DateTime arrivalDate
  

}
concept ProductLocation {
  o PreviousState previousState
  o CurrentState currentState

}


enum ProductType {
  o Salamon
  o Tuna
  o crab

}

enum ShipmentStatus{
  o NOT_CREATED
  o CREATED
  o IN_TRANSIST
  o SHIPPED
  o ARRIVED
  o SOLD
}

enum ProductStatus{
  o NOT_CREATED
  o CREATED
  o IN_PRODUCTION
  o IN_PROCESSING
  o PROCESSED
}


enum Role{
  o FISHERMAN
  o PRODUCER
  o PROCESSOR
  o DISTRIBUTOR
  o RETAILER
  o CONSUMER
}



abstract participant Bussiness identified by processId {
  o String processId
  o String email
  o String number
  o Role role default = "PROCESSOR"
}

asset FishProduct identified by productid {
  o String productid
  o String[] componentId
  o String id
  o String barcode
  o String name
  o String placeoforigin
  o DateTime produceDate
  o DateTime expirationDate
  o ProductType type
  o String batchQuantity
  o String unitPrice 
  o String[] history optional
  o ProductLocation productLocation
  o ProductStatus productStatus  default ="CREATED"
  --> FisherMan owner
  --> Producer producer
  -->Processor processor
}


participant FisherMan identified by fid{
  o String fid
  o String email optional
  o Address address optional
  o String certificate optional
  o String location optional
  o Role role default = "FISHERMAN" optional
}

participant Producer identified by pid{
  o String pid
  o String email
  o Address address optional
  o String companyName
  o String fishermanId
  o Role role default = "PRODUCER"
}

participant  Processor extends Bussiness {}

participant Distributor identified by Did {
  o String Did
  o String name
  o String email
  o Role role default = "DISTRIBUTOR"
}

participant Retailer identified by Rid {
  o String Rid
  o String name
   o String email
  o Role role default = "RETAILER"
}

participant Consumer identified by Cid {
  o String Cid
  o String name
   o String email
  o Role role default = "CONSUMER"
}

abstract transaction ShipmentTransaction {
  --> Shipment shipment
}



abstract transaction ProductTransaction {
  --> FishProduct fishDepartment
}

transaction productRecieved extends ProductTransaction{
 o String location
}


/**
 * An temperature reading for a shipment. E.g. received from a
 * device within a temperature controlled shipping container
 */
transaction TemperatureReading extends ShipmentTransaction {
  o Double centigrade
}

/**
 * A notification that a shipment has been received by the
 * importer and that funds should be transferred from the importer
 * to the grower to pay for the shipment.
 */
transaction ShipmentReceived extends ShipmentTransaction {
   o String location
}

transaction initializeAll {
}


transaction createFishProduct {
  o String productid
  o String[] componentId
  o String id
  o String barcode
  o String name
  o String placeoforigin
  o DateTime produceDate
  o DateTime expirationDate
  o ProductType type
  o String batchQuantity
  o String unitPrice 
  o String location
  o String productStatus  default ="CREATED"

}

asset Shipment identified by shipmentId {
  o String shipmentId
  o ProductType type
  o ShipmentStatus status default = "NOT_CREATED"
  o Long unitCount
  o String batchId
  o TemperatureReading[] temperatureReadings optional
  --> Distributor distributor
  --> Retailer retailer
  --> Consumer consumer
  --> FishProduct product
}


transaction createShipment {
  o String shipmentId
  o ProductType type
  o ShipmentStatus status default = "NOT_CREATED"
  o Long unitCount
  o String batchId
  o TemperatureReading[] temperatureReadings optional
  --> Distributor distributor
  --> FishProduct product
}

transaction TransferToProducer {
 --> Producer producer
 --> FishProduct fishProduct
}


transaction TransferToProcesor {
 --> Processor processor
 --> FishProduct fishProduct
}
transaction TransferToRetailer {
 -->  Retailer retailer
 --> Shipment shipment
}

transaction Consume {
  --> Consumer consumer
  --> Shipment shipment
}

transaction queryAssetByassetId {
  --> FishProduct fishProduct
}

transaction  queryShipmentAsset{
    --> Shipment shipment
}

transaction productStatus {
  -->FishProduct product
}
  
  
transaction queryAssets {

}


transaction queryTransaction {

}
  

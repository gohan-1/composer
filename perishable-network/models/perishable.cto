namespace org.fishDepartment.shipping.net


concept Address {
  o String city optional
  o String country
  o String steet optional
  o String postCode
}

concept PreviousState {
  o String location
  o DateTime arrivalDate
}

concept CurrentState {
  o String location
  o String arrivalDate
  

}
concept ProductLocation {
  o PreviousState[] previousState
  o CurrentState currentState

}


enum ProductType {
  o Salamon
  o Tuna
  o crab

}

enum ShipmentStatus{
  o CREATED
  o IN_TRANSIST
  o SHIPPED
  o ARRIVED
}

enum Role{
  o FISHERMAN
  o PRODUCER
  o PROCESSOR
  o Distributor
  o RETAILER
  o CONSUMER
}

asset Contract identified by contractId {
  o String contractId 
  -->  FisherMan fisherman
  --> Processor processor
  o DateTime arrivalDate
  o Double unitPrize
  o Double minTemperature
  o Double maxTemperature
  o Double minPenality 
}

asset shipment identified by shipmentId {
  o String shipmentId
  o ProductType product 
  o ShipmentStatus status
  o Long unitCount
  --> Contract contract
}
abstract participant Bussiness identified by processId {
  o String processId
  o String email
  o String number
  o Role role default = "PROCESSOR"
}

asset fishProduct identified by productid {
  o String productid
  o String[] componentId
  o String id
  o String barcode
  o String names
  o String placeoforigin
  o DateTime produceDate
  o DateTime expirationDate
  o String batchId
  o ProductType type
  o String batchQuantity
  o String unitPrice 
  o ProductLocation[] productLocation
  o ShipmentStatus status
  --> FisherMan owner
  --> Producer producer
  --> Processor processor
}


participant FisherMan identified by fid{
  o String fid
  o String[] componentId
  o String email
  o Address address
  o String certificate
  o String location
}

participant Producer identified by pid{
  o String pid
  o String[] componentId
  o String email
  o Address address
  o String companyName
  o String fishermanId
}

participant  Processor extends Bussiness {}

participant Distributor identified by Did {
  o String Did
  o String Name
}

participant Retailer identified by Rid {
  o String Rid
  o String name
}

participant Consumer identified by Cid {
  o String Cid
  o String name
}

abstract transaction ShipmentTransaction {
  --> Shipment shipment
}

/**
 * An temperature reading for a shipment. E.g. received from a
 * device within a temperature controlled shipping container
 */
transaction TemperatureReading extends ShipmentTransaction {
  o Double centigrade
}

/**
 * A notification that a shipment has been received by the
 * importer and that funds should be transferred from the importer
 * to the grower to pay for the shipment.
 */
transaction ShipmentReceived extends ShipmentTransaction {
}

transaction SetupDemo {
}

asset Shipment identified by shipmentId {
  o String shipmentId
  o ProductType type
  o ShipmentStatus status
  o Long unitCount
  o TemperatureReading[] temperatureReadings optional
  --> Contract contract
}
